% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/transform-filter.R
\name{transform_sample_counts}
\alias{transform_sample_counts}
\title{Transform abundance data in an \code{otu_table}, sample-by-sample}
\usage{
transform_sample_counts(physeq, fun, ...)
}
\arguments{
\item{physeq}{\code{\link[=phyloseq-class]{phyloseq-class()}} or \code{\link[ape:read.tree]{ape::phylo()}}.}

\item{fun}{A function or formula that can be converted to a function by
\code{\link[purrr:as_mapper]{purrr::as_mapper()}}}

\item{...}{Additional arguments passed on to \code{fun}}
}
\description{
Version of \code{\link[phyloseq:transformcounts]{phyloseq::transform_sample_counts()}} that allows a
purrr-style anonymous function.
}
\details{
This function simply calls \code{\link[purrr:as_mapper]{purrr::as_mapper()}} on \code{fun} and passes the
resulting function on to \code{\link[phyloseq:transformcounts]{phyloseq::transform_sample_counts()}}.
}
\examples{
data(GlobalPatterns)
# Filter low prevalence taxa, then convert to proportions
gp.prop <- GlobalPatterns \%>\%
  filter_taxa2(~ sum(. > 0) > 5) \%>\%
  transform_sample_counts(~ . / sum(.))
}
\seealso{
\code{\link[phyloseq:transformcounts]{phyloseq::transform_sample_counts()}}
\code{\link[purrr:as_mapper]{purrr::as_mapper()}}
}
